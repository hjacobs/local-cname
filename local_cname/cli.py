import argparse
import socket
import sys
import time
import os
from pathlib import Path

from clickclick import Action, info, error
from filelock import FileLock, Timeout


def main():
    parser = argparse.ArgumentParser()
    parser.add_argument('from')
    parser.add_argument('to')
    args = parser.parse_args()

    hosts_file = Path('/etc/hosts')
    backup_file = hosts_file.with_suffix('.local-cname-backup')
    lock_file = hosts_file.with_suffix('.local-cname-lock')

    lock = FileLock(str(lock_file))
    try:
        with lock.acquire(timeout=1):
            edit_etc_hosts(hosts_file, backup_file, args)
    except Timeout:
        error('Another instance of local-cname seems to be running.')
        info('(if a previous process crashed, remove {} '
             'and check the contents of {} and {})'.format(lock_file, hosts_file, backup_file))
        sys.exit(1)


def edit_etc_hosts(hosts_file, backup_file, args):
    with hosts_file.open() as fd:
        old_contents = fd.read()

    HEADER = '#### Start of entries generated by local-cname'
    if HEADER in old_contents:
        error('{} seems to have already been modified by local-cname.'.format(hosts_file))
        info('Remove the local-cname header line from this file to proceed.')
        sys.exit(1)

    with backup_file.open('w') as fd:
        fd.write(old_contents)

    try:
        while True:
            entries = []

            with Action('Resolving {} ..'.format(args.to)):
                results = socket.getaddrinfo(args.to, 80, type=socket.SOCK_STREAM)
                for result in results:
                    family, type, proto, canonname, sockaddr = result
                    if family in (socket.AF_INET, socket.AF_INET6):
                        ip = sockaddr[0]
                        entries.append((getattr(args, 'from'), ip))

            info('Current entries:')
            for hostname, ip in entries:
                info('{} -> {}'.format(hostname, ip))

            with Action('Writing {} ..'.format(hosts_file)):
                with hosts_file.open('w') as fd:
                    fd.write(old_contents)
                    fd.write('{}\n'.format(HEADER))
                    for hostname, ip in entries:
                        fd.write('{} {}\n'.format(ip, hostname))

            time.sleep(60)
    except KeyboardInterrupt:
        # ignore, do not print stacktrace
        pass
    finally:
        try:
            backup_file.rename(hosts_file)
        except OSError:
            with hosts_file.open('w') as fd:
                fd.write(old_contents)
            os.remove(backup_file)
